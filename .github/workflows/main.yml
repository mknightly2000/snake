name: Build and Release SnakeGame

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter the version (e.g., v1.0.0)"
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Linux dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev

      - name: Build executable
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --noconfirm --onefile --noconsole \
              --add-data "fonts;fonts" \
              --add-data "sounds;sounds" \
              --name SnakeGame \
              main.py
          else
            pyinstaller --noconfirm --onefile --noconsole \
              --add-data "fonts:fonts" \
              --add-data "sounds:sounds" \
              --name SnakeGame \
              main.py
          fi
        shell: bash

      - name: Rename executable
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/SnakeGame.exe dist/SnakeGame-windows.exe
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv dist/SnakeGame dist/SnakeGame-linux
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv dist/SnakeGame dist/SnakeGame-macos
          fi
        shell: bash

      - name: Zip executable (Linux and macOS only)
        if: matrix.os != 'windows-latest'
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            zip dist/SnakeGame-linux.zip dist/SnakeGame-linux
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            zip dist/SnakeGame-macos.zip dist/SnakeGame-macos
          fi

        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SnakeGame-${{ matrix.os }}
          path: dist/SnakeGame-${{ matrix.os == 'windows-latest' && 'windows.exe' || matrix.os == 'ubuntu-latest' && 'linux' || 'macos' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: SnakeGame-windows-latest
          path: dist/windows

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: SnakeGame-ubuntu-latest
          path: dist/linux

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: SnakeGame-macos-latest
          path: dist/macos

      - name: List downloaded files (Debugging)
        run: ls -R dist

      - name: Make Linux/macOS files executable
        run: |
          chmod +x dist/linux/SnakeGame-linux || true
          chmod +x dist/macos/SnakeGame-macos || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version || format('v{0}', github.run_number) }}
          name: SnakeGame Release ${{ github.event.inputs.version || format('v{0}', github.run_number) }}
          draft: false
          prerelease: false
          body: |
            SnakeGame release for Windows, Linux, and macOS.
            - Windows: SnakeGame-windows.exe
            - Linux: SnakeGame-linux
            - macOS: SnakeGame-macos
            - Changelog: See commit history
          files: |
            dist/windows/SnakeGame-windows.exe
            dist/linux/SnakeGame-linux
            dist/macos/SnakeGame-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
