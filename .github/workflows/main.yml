name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter the version (e.g., v1.0.0)"
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Linux dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev

      - name: Set platform name
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "PLATFORM=linux" >> $GITHUB_ENV
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "PLATFORM=windows" >> $GITHUB_ENV
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "PLATFORM=macos" >> $GITHUB_ENV
          fi

      - name: Build executable
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --noconfirm --onefile --noconsole \
              --add-data "fonts;fonts" \
              --add-data "sounds;sounds" \
              --name Snake \
              main.py
          else
            pyinstaller --noconfirm --onefile --noconsole \
              --add-data "fonts:fonts" \
              --add-data "sounds:sounds" \
              --name Snake \
              main.py
          fi
        shell: bash

      - name: Rename executable
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/Snake.exe dist/Snake-${{ env.PLATFORM }}.exe
          else
            mv dist/Snake dist/Snake-${{ env.PLATFORM }}
          fi
        shell: bash

      - name: Zip executable (Linux and macOS only)
        if: matrix.os != 'windows-latest'
        run: |
          zip dist/Snake-${{ env.PLATFORM }}.zip dist/Snake-${{ env.PLATFORM }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Snake-${{ env.PLATFORM }}-artifact
          path: |
            ${{ matrix.os == 'windows-latest' && 'dist/Snake-windows.exe' || 'dist/Snake-${{ env.PLATFORM }}.zip' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: Snake-windows-artifact
          path: dist

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: Snake-linux-artifact
          path: dist

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: Snake-macos-artifact
          path: dist

      - name: List downloaded files (Debugging)
        run: ls -R dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version || format('v{0}', github.run_number) }}
          name: Snake Release ${{ github.event.inputs.version || format('v{0}', github.run_number) }}
          draft: false
          prerelease: false
          body: |
            Snake release for Windows, Linux, and macOS.
            - Windows: Download Snake-windows.exe and run directly
            - Linux: Download Snake-linux.zip and extract Snake-linux
            - macOS: Download Snake-macos.zip and extract Snake-macos
          files: |
            dist/Snake-windows.exe
            dist/Snake-linux.zip
            dist/Snake-macos.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
